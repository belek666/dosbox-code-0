#include "keyboard.h"

const KBD_KEYS ps2_keymap[] = { 
    KBD_NONE,
	KBD_NONE,
	KBD_NONE,
	KBD_NONE,
    KBD_a,
    KBD_b,
    KBD_c,
    KBD_d,
    KBD_e,
    KBD_f,
    KBD_g,
    KBD_h,
    KBD_i,
    KBD_j,
    KBD_k,
    KBD_l,
    KBD_m,
    KBD_n,
    KBD_o,
    KBD_p,
    KBD_q,
    KBD_r,
    KBD_s,
    KBD_t,
    KBD_u,
    KBD_v,
    KBD_w,
    KBD_x,
    KBD_y,
    KBD_z,
    KBD_1,
    KBD_2,
    KBD_3,
    KBD_4,
    KBD_5,
    KBD_6,
    KBD_7,
    KBD_8,
    KBD_9,
    KBD_0,
    KBD_enter, /* line feed */ //40
    KBD_esc, /* Esc */ 
    KBD_backspace,/* BS */
    KBD_tab, /* TAB */
    KBD_space,
    KBD_minus,
    KBD_equals,
    KBD_leftbracket,
    KBD_rightbracket,
    KBD_backslash,
    KBD_extra_lt_gt, //?
    KBD_semicolon,
    KBD_quote, //APOSTROPHE
    KBD_grave,
    KBD_comma,
    KBD_period,
    KBD_slash,
    KBD_capslock, /* CL */
    KBD_f1, // F1
    KBD_f2, // F2
    KBD_f3, // F3
    KBD_f4, // F4
    KBD_f5, // F5
    KBD_f6, // F6
    KBD_f7, // F7
    KBD_f8, // F8 
    KBD_f9, // F9
    KBD_f10, // F10
    KBD_f11, // F11
    KBD_f12, // F12
    KBD_printscreen, // PrintScr
    KBD_scrolllock, // Scroll Lock
    KBD_pause, // Pause
    KBD_insert, // Insert
    KBD_home, // Home 
    KBD_pageup, // Pg Up
    KBD_delete, // Delete
    KBD_end, // End
    KBD_pagedown, // Pg Down
    KBD_right, // Right
    KBD_left, // Left
    KBD_down, // Down
    KBD_up, // Up 0x52
    KBD_numlock, // Numlock
    KBD_kpdivide, // Keypad 
    KBD_kpmultiply,
    KBD_kpminus,
    KBD_kpplus,
    KBD_kpenter,
    KBD_kp1,
    KBD_kp2,
    KBD_kp3,
    KBD_kp4,
    KBD_kp5,
    KBD_kp6,
    KBD_kp7,
    KBD_kp8,
    KBD_kp9,
    KBD_kp0,
    KBD_NONE,
    KBD_NONE,
    KBD_NONE,
    KBD_NONE,
    KBD_NONE,
    KBD_NONE,
    KBD_NONE,
    KBD_NONE,
    KBD_NONE,
    KBD_NONE,
    KBD_NONE,
    KBD_NONE,
    KBD_NONE,
    KBD_NONE,
    KBD_NONE,
    KBD_NONE,
    KBD_NONE,
    KBD_NONE,
    KBD_NONE,
    KBD_NONE,
    KBD_NONE,
    KBD_NONE,
    KBD_NONE,
    KBD_NONE,
    KBD_NONE,
    KBD_NONE,
    KBD_NONE,
    KBD_NONE,
    KBD_NONE,
    KBD_NONE,
    KBD_NONE, // 0x81
    KBD_NONE,
    KBD_NONE,
    KBD_NONE,
    KBD_NONE,
    KBD_NONE,
    KBD_NONE,
    KBD_NONE,
    KBD_NONE,
    KBD_NONE,
    KBD_NONE,
    KBD_NONE,
    KBD_NONE,
    KBD_NONE,
    KBD_NONE,
    KBD_NONE,
    KBD_NONE,
    KBD_NONE,
    KBD_NONE,
    KBD_NONE,
    KBD_NONE,
    KBD_NONE,
    KBD_NONE,
    KBD_NONE,
    KBD_NONE,
    KBD_NONE,
    KBD_NONE,
    KBD_NONE,
    KBD_NONE,
    KBD_NONE,
    KBD_NONE,
    KBD_NONE,
    KBD_NONE,
    KBD_NONE,
    KBD_NONE,
    KBD_NONE,
    KBD_NONE,
    KBD_NONE,
    KBD_NONE,
    KBD_NONE,
    KBD_NONE,
    KBD_NONE,
    KBD_NONE,
    KBD_NONE,
    KBD_NONE,
    KBD_NONE,
    KBD_NONE,
    KBD_NONE,
    KBD_NONE,
    KBD_NONE,
    KBD_NONE,
    KBD_NONE,
    KBD_NONE,
    KBD_NONE,
    KBD_NONE,
    KBD_NONE,
    KBD_NONE,
    KBD_NONE,
    KBD_NONE,
    KBD_NONE,
    KBD_NONE,
    KBD_NONE,
    KBD_NONE,
    KBD_NONE,
    KBD_NONE,
    KBD_NONE,
    KBD_NONE,
    KBD_NONE,
    KBD_NONE,
    KBD_NONE,
    KBD_NONE,
    KBD_NONE,
    KBD_NONE,
    KBD_NONE,
    KBD_NONE,
    KBD_NONE,
    KBD_NONE,
    KBD_NONE,
    KBD_NONE,
    KBD_NONE,
    KBD_NONE,
    KBD_NONE,
    KBD_NONE,
    KBD_NONE,
    KBD_NONE,
    KBD_NONE,
    KBD_NONE,
    KBD_NONE,
    KBD_NONE,
    KBD_NONE,
    KBD_NONE,
    KBD_NONE,
    KBD_NONE,
    KBD_NONE,
    KBD_NONE,
    KBD_leftctrl,///
    KBD_leftshift,
    KBD_leftalt,
    KBD_NONE,
    KBD_rightctrl,
    KBD_rightshift,
    KBD_rightalt,
    KBD_NONE,
    KBD_NONE,
    KBD_NONE,
    KBD_NONE,
    KBD_NONE,
    KBD_NONE,
    KBD_NONE,
    KBD_NONE,
    KBD_NONE,
    KBD_NONE,
    KBD_NONE,
    KBD_NONE,
    KBD_NONE,
    KBD_NONE,
    KBD_NONE,
    KBD_NONE,
    KBD_NONE,
    KBD_NONE,
    KBD_NONE,
    KBD_NONE,
    KBD_NONE,
    KBD_NONE,
    KBD_NONE,
    KBD_NONE,
    KBD_NONE
  };